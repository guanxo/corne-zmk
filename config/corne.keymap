/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DVORAK 0
#define SYMBOLS 1
#define NUMBERS 2
#define ADJUST 3

/ {
    combos {
        compatible = "zmk,combos";
        combo_backspace {
            timeout-ms = <30>;
            key-positions = <19 20>;
            bindings = <&kp BKSP>;
        };
        combo_supr {
            timeout-ms = <30>;
            key-positions = <17 18>;
            bindings = <&kp BKSP>;
        };
        combo_ret {
            timeout-ms = <20>;
            key-positions = <20 21>;
            bindings = <&kp RET>;
        };
        combo_tab {
            timeout-ms = <30>;
            key-positions = <16 17>;
            bindings = <&kp LS(TAB)>;
        };
        combo_rev_tab {
            timeout-ms = <30>;
            key-positions = <13 14>;
            bindings = <&kp TAB>;
        };
        combo_undo {
            timeout-ms = <50>;
            key-positions = <24 25>;
            bindings = <&kp LC(Z)>;
        };
        combo_redo {
            timeout-ms = <50>;
            key-positions = <25 26>;
            bindings = <&kp LC(Y)>;
        };
        combo_copy {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp LC(C)>;
        };
        combo_paste {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp LC(V)>;
        };
        combo_save {
            timeout-ms = <50>;
            key-positions = <29 30>;
            bindings = <&kp LC(S)>;
        };
        combo_up {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp UP>;
        };
        combo_down {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&kp DOWN>;
        };
        combo_left {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp LEFT>;
        };
        combo_right {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp RIGHT>;
        };
    };
};


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        display-name = "dvorak";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp SQT  &kp COMMA  &kp DOT  &kp P     &kp Y          &kp F     &kp G  &kp C     &kp R    &kp L    &kp BSPC
   &kp LSHFT &kp A    &kp O      &kp E    &kp U     &kp I          &kp D     &kp H  &kp T     &kp N    &kp S    &kp RSHFT
   &kp LCTRL &kp SEMI &kp Q      &kp J    &kp K     &kp X          &kp B     &kp M  &kp W     &kp V    &kp Z    &kp ESC
                  &kp LGUI &mo SYMBOLS &mo NUMBERS   &kp BSPC &kp SPACE &kp SPACE
                        >;
                };
                lower_layer {
                        display-name = "symbols";
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp F11   &kp F1   &kp F2   &kp F3     &kp F4       &kp F5      &kp LS(N7)  &kp RBKT  &kp RA(N8)     &kp RA(N9)   &kp LS(RBKT)    &kp UNDER
   &kp CAPS   &kp F6   &kp F7   &kp MINUS  &kp AT_SIGN  &kp CARET     &kp EXCL    &kp LS(N0)  &kp LS(N8)   &kp LS(N9)    &kp RA(MINUS) &kp RA(N4)
   &kp CAPS  &trans   &trans   &kp LS(N5)     &kp LS(N6)       &kp LS(4)     &kp LA(N2) &mo QUESTION SLASH  &kp RA(N7) &kp RA(N0)  &kp LS(DOT) &kp CAPS
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
                        display-name = "numbers";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &kp CARET &kp N7  &kp N8 &kp N9 &kp RPAR &kp K_VOL_UP
   &kp F11  &kp F1   &kp F2   &kp F3 &kp F4   &kp F5      &kp MINUS &kp N4 &kp N5  &kp N6 &kp BSLH &kp K_VOL_DN
   &kp F12  &kp F6    &kp F7 &kp F8  &kp F9    &kp F10        &kp N0 &kp N1  &kp N2  &kp N3 &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
